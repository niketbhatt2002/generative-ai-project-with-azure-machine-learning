# -*- coding: utf-8 -*-
"""Project-1 Cognizant Azure.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Ghb8o7CSuJxnFoE57N4B0Y1I4-i8mj9d
"""

# Install libraries
!pip install transformers datasets

# Loading dataset 1
from datasets import load_dataset
dataset = load_dataset("xsum")  # Or use your custom dataset

# Load model and tokenizer
from transformers import AutoTokenizer, AutoModelForSeq2SeqLM
model_name = "t5-small"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSeq2SeqLM.from_pretrained(model_name)

# Preprocess dataset
def preprocess_function(examples):
    return tokenizer(examples["document"], truncation=True, padding="max_length", max_length=256)
tokenized_dataset = dataset.map(preprocess_function, batched=True)

# Train model
from transformers import Trainer, TrainingArguments
training_args = TrainingArguments(
    output_dir="./results",
    evaluation_strategy="epoch",
    learning_rate=2e-5,
    per_device_train_batch_size=8,
    num_train_epochs=2,
    weight_decay=0.01,
    save_strategy="epoch",
    logging_dir="./logs",
)
trainer = Trainer(
    model=model,
    args=training_args,
    train_dataset=tokenized_dataset["train"].select(range(100)),  # Use only 100 samples
    eval_dataset=tokenized_dataset["validation"].select(range(20)),  # Use only 20 samples
)
trainer.train()

# Save model
model.save_pretrained("./fine-tuned-t5-small-summarization")
tokenizer.save_pretrained("./fine-tuned-t5-small-summarization")

# Evaluate model
from transformers import pipeline
from datasets import load_metric
summarizer = pipeline("summarization", model="./fine-tuned-t5-small-summarization")
sample = dataset["test"][0]
summary = summarizer(sample["document"], max_length=50, min_length=10, do_sample=False)[0]["summary_text"]
rouge = load_metric("rouge")
reference = sample["summary"]
scores = rouge.compute(predictions=[summary], references=[reference])
print("ROUGE Scores:", scores)
